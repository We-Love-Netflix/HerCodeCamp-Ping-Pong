import turtle
import time
import random

#----------INTRO STUFF:--------#
#creating game window
width = 960
height = 540
window = turtle.Screen()
window.setup(width,height)
window.bgcolor('white')
window.tracer(1)

#creating the ball
ball = turtle.Turtle()
ball.shape("circle")
ball.color("black")
ball.speed(0)
ball.penup()

#creating the star
window.addshape("ninja_star", ((0, 4), (16, 16), (4, 0), (16, -16), (0, -4), (-16, -16), (-4, 0), (-16, 16)))
star = turtle.Turtle()
star.penup()
star.shape("ninja_star")
star.color("black")
star.hideturtle()
star.speed(0)
star_rand_y = random.randint(-250, 250)
generate_new_star = False

#declaring & initialing score variables, speed
left_score = 0
right_score = 0
speedx = 10
speedy = 10

#Declaring game over variable
game_over = False
#------------------------------#



#-----------WRITERS:-----------#
#writes title
title_writer = turtle.Turtle()
title_writer.speed(0)
title_writer.hideturtle()
title_writer.penup()
title_writer.setposition(0, 210)
title_writer.color('black')
title_writer.write("Ping Pong Game", align='center', font=('Courier', 40, 'bold'))

#writes score
score_writer = turtle.Turtle()
score_writer.speed(0)
score_writer.hideturtle()
score_writer.penup()

#writes random info
give_info = turtle.Turtle()
give_info.speed(0)
give_info.hideturtle()
give_info.penup()
give_info.setposition(0, -10)
give_info.color('red')
#------------------------------#


#-----------PADDLES:-----------#
#paddle coordinates
lp1 = (-30,-400)
lp2 = (-30,-380)
lp3 = (30,-380)
lp4 = (30,-400)
rp1 = (-30,400)
rp2 = (-30,380)
rp3 = (30,380)
rp4 = (30,400)

#creating paddles
window.addshape("left_paddle", (lp1, lp2, lp3, lp4))
paddle_one = turtle.Turtle()
paddle_one.penup()
paddle_one.shape("left_paddle")
paddle_one.color("grey")

window.addshape("right_paddle", (rp1, rp2, rp3, rp4))
paddle_two = turtle.Turtle()
paddle_two.penup()
paddle_two.shape("right_paddle")
paddle_two.color("grey")

#paddle movement functions
def paddle_one_up():
    paddle_one.sety(paddle_one.ycor()+10)
    if paddle_one.ycor() > 240:
        paddle_one.sety(240)
def paddle_one_down():
    paddle_one.sety(paddle_one.ycor()-10)
    if paddle_one.ycor() < -240:
        paddle_one.sety(-240)
def paddle_two_up():
    paddle_two.sety(paddle_two.ycor()+10)
    if paddle_two.ycor() > 240:
        paddle_two.sety(240)
def paddle_two_down():
    paddle_two.sety(paddle_two.ycor()-10)
    if paddle_two.ycor() < -240:
        paddle_two.sety(-240)
#------------------------------#



#----------FUNCTIONS:----------#
#writes score
def write_score():
    score_writer.setposition(300, 190)
    score_writer.color('blue')
    score_writer.write("Score: " + str(right_score), align='left', font=('Courier', 20, 'normal'))
    score_writer.setposition(-450, 190)
    score_writer.color('green')
    score_writer.write("Score: " + str(left_score), align='left', font=('Courier', 20, 'normal'))
write_score()

#writes miss
def write_miss():
    give_info.setposition(0, -10)
    give_info.write("MISS!", align='center', font=('Arial', 30, 'bold'))
    give_info.setposition(0, -50)
    give_info.write("- 10", align='center', font=('Arial', 30, 'bold'))
    time.sleep(1.5)
    give_info.clear()

#writes +10
def write_plus_10():
    give_info.setposition(0, -10)
    give_info.write("+ 10", align='center', font=('Arial', 30, 'bold'))
    time.sleep(0.5)
    give_info.clear()

#check if ball hits right
def check_for_right_hit():
    global speedx
    global right_score
    if (ball.xcor() == 390) and paddle_two.ycor() < ball.ycor()+40 and paddle_two.ycor() > ball.ycor() - 40:
        speedx = speedx * -1
        right_score = right_score + 10
        score_writer.clear()
        write_score()
        write_plus_10()

#check if ball hits left
def check_for_left_hit():
    global speedx
    global left_score
    if (ball.xcor() == -390) and paddle_one.ycor() < ball.ycor()+40 and paddle_one.ycor() > ball.ycor() - 40:
        speedx = speedx * -1
        left_score = left_score + 10
        score_writer.clear()
        write_score()
        write_plus_10()

#check if ball hits the star
def check_for_star_hit():
    if ball.distance(star) < 10:
        give_info.write("GAME OVER!", align='center', font=('Arial', 30, 'bold'))
        game_over = True
#------------------------------#


# for normal round
while game_over == False:
    window.update()
    time.sleep(0.1)
    #moves ball
    ball.setx(ball.xcor() + speedx)
    ball.sety(ball.ycor() + speedy)

    #keyboard input for moving paddles
    window.onkey(paddle_one_up, "W")
    window.onkey(paddle_one_down, "S")
    window.onkey(paddle_two_up, "Up")
    window.onkey(paddle_two_down, "Down")
    window.listen()

    #keeps it in bounds
    if ball.ycor() >= 270:
        speedy = speedy * -1
    elif ball.ycor() <= -270:
        speedy = speedy * -1

    #function checks if ball hits baddle
    check_for_right_hit()
    #BLITZ?
    if right_score == 10:
        break
    check_for_left_hit()
    #BLITZ?
    if left_score == 10:
        break

    #if right paddle misses
    if ball.xcor() == 400:
        write_miss()
        right_score = right_score - 10
        score_writer.clear()
        write_score()
        ball.setposition(0, 0)
    if ball.xcor() == -400:
        write_miss()
        left_score = left_score - 10
        score_writer.clear()
        write_score()
        ball.setposition(0, 0)


#writes blitz in middle
give_info.setposition(0, -10)
give_info.write("BLITZ ROUND!", align='center', font=('Arial', 30, 'bold'))
time.sleep(1)
give_info.clear()

#changes speed(makes it faster)
speedx = 18
speedy = 18
ball.setposition(0, 0)

#change colors to blitz colors
window.bgcolor('pale green')
paddle_one.color("dark violet")
paddle_two.color("dark violet")
i = 0
star.showturtle()

#colors
colors = ["red", "blue", "gold", "light sea green", "dark orange", "indigo"]

#for blitz round
while left_score < 50 and right_score < 50:
    window.update()
    time.sleep(0.1)
    #moving the ball
    ball.color(colors[i])
    i += 1
    if i == 5:
        i = 0
    ball.setx(ball.xcor() + speedx)
    ball.sety(ball.ycor() + speedy)

    if generate_new_star == False:
        star.setposition(380, star_rand_y)

    #keyboard input for moving paddles
    window.onkey(paddle_one_up, "W")
    window.onkey(paddle_one_down, "S")
    window.onkey(paddle_two_up, "Up")
    window.onkey(paddle_two_down, "Down")
    window.listen()

    #keeps in boundaries
    if ball.ycor() >= 270:
        speedy = speedy * -1
    if star.ycor() >= 270:
        starspeedy = starspeedy * -1
    if ball.ycor() <= -270:
        speedy = speedy * -1
    if star.ycor() <= -270:
        starspeedy = starspeedy * -1

    #function checks if ball hits paddle
    check_for_right_hit()
    check_for_left_hit()
    check_for_star_hit()

    #if right paddle misses
    if ball.xcor() >= 400:
        write_miss()
        right_score = right_score - 10
        score_writer.clear()
        write_score()
        ball.setposition(0, 0)
    if ball.xcor() <= -400:
        write_miss()
        left_score = left_score - 10
        score_writer.clear()
        write_score()
        ball.setposition(0, 0)
